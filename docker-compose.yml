version: '3.1'

services:
   database:
     restart: always
     image: postgres:latest
     privileged: true
     ports:
       - 5432:5432
     environment:
        POSTGRES_PASSWORD: test

   minio1:
     image: minio/minio:RELEASE.2020-04-02T21-34-49Z
     volumes:
     - data1-1:/data1
     - data1-2:/data2
     ports:
     - "9001:9000"
     environment:
       MINIO_ACCESS_KEY: minio
       MINIO_SECRET_KEY: minio123
     command: server http://minio{1...4}/data{1...2}
     healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
       interval: 30s
       timeout: 20s
       retries: 3

   minio2:
     image: minio/minio:RELEASE.2020-04-02T21-34-49Z
     volumes:
     - data2-1:/data1
     - data2-2:/data2
     ports:
     - "9002:9000"
     environment:
       MINIO_ACCESS_KEY: minio
       MINIO_SECRET_KEY: minio123
     command: server http://minio{1...4}/data{1...2}
     healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
       interval: 30s
       timeout: 20s
       retries: 3

   minio3:
     image: minio/minio:RELEASE.2020-04-02T21-34-49Z
     volumes:
     - data3-1:/data1
     - data3-2:/data2
     ports:
     - "9003:9000"
     environment:
       MINIO_ACCESS_KEY: minio
       MINIO_SECRET_KEY: minio123
     command: server http://minio{1...4}/data{1...2}
     healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
       interval: 30s
       timeout: 20s
       retries: 3

   minio4:
     image: minio/minio:RELEASE.2020-04-02T21-34-49Z
     volumes:
     - data4-1:/data1
     - data4-2:/data2
     ports:
     - "9004:9000"
     environment:
       MINIO_ACCESS_KEY: minio
       MINIO_SECRET_KEY: minio123
     command: server http://minio{1...4}/data{1...2}
     healthcheck:
       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
       interval: 30s
       timeout: 20s
       retries: 3


   namesrv:
     image: rocketmqinc/rocketmq
     container_name: rmqnamesrv
     ports:
     - 9876:9876
     volumes:
     - ./logs:/home/rocketmq/logs
     - ./rocketmq/store:/home/rocketmq/store
     command: sh mqnamesrv
   broker:
     image: rocketmqinc/rocketmq
     container_name: rmqbroker
     ports:
     - 10909:10909
     - 10911:10911
     - 10912:10912
     volumes:
     - ./logs:/home/rocketmq/logs
     - ./store:/home/rocketmq/store
     # - ./conf :/opt/rocketmq-4.4.0/conf
     command: sh mqbroker -n rmqnamesrv:9876 autoCreateTopicEnable=true
     #command: sh mqbroker -n namesrv:9876 -c ../conf/broker.conf
     depends_on:
     - namesrv
     environment:
     - JAVA_HOME=/usr/lib/jvm/jre
   console:
     image: styletang/rocketmq-console-ng
     container_name: rocketmq-console-ng
     ports:
     - 8087:8080
     depends_on:
     - namesrv
     environment:
     - JAVA_OPTS= -Dlogging.level.root=info   -Drocketmq.namesrv.addr=rmqnamesrv:9876
     - Dcom.rocketmq.sendMessageWithVIPChannel=false

volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
