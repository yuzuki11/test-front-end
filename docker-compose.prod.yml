version: '3.1'

services:
  database:
    restart: always
    image: postgres:latest
    privileged: true
    networks:
      matrix:
        aliases:
        - database
    ports:
    - 5432:5432
    environment:
      POSTGRES_PASSWORD: test

  minio1:
    image: minio/minio:RELEASE.2020-04-02T21-34-49Z
    volumes:
    - data1-1:/data1
    - data1-2:/data2
    networks:
      matrix:
        aliases:
        - minio1
    ports:
    - 9001:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2020-04-02T21-34-49Z
    volumes:
    - data2-1:/data1
    - data2-2:/data2
    networks:
      matrix:
        aliases:
        - minio2
    ports:
    - 9002:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2020-04-02T21-34-49Z
    volumes:
    - data3-1:/data1
    - data3-2:/data2
    networks:
      matrix:
        aliases:
        - minio3
    ports:
    - 9003:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2020-04-02T21-34-49Z
    volumes:
    - data4-1:/data1
    - data4-2:/data2
    networks:
      matrix:
        aliases:
        - minio4
    ports:
    - 9004:9000
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  redis:
    image: redis
    networks:
      matrix:
        aliases:
        - redis
    ports:
    - 6379:6379
    command:
      redis-server

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      matrix:
        aliases:
        - zookeeper
    ports:
    - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    networks:
      matrix:
        aliases:
        - kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "mail:1:1,websocket:1:1,security:1:1,statistics:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ADVERTISED_PORT: 9092

  mongodb:
    image: mongo:3.5
    volumes:
    - ./mongo-data:/var/lib/mongodb/data
    networks:
      matrix:
        aliases:
        - mongo
    ports:
    - 27017:27017

  backend:
    image: matrix-dev-docker.pkg.coding.net/matrix-server/3.0.0/matrix-backend-core
    networks:
      matrix:
        aliases:
        - backend
    ports:
    - 8999:8999
    environment:
      kafka_server: kafka:9092
      postgre_url: postgresql://database/matrix
      secret_key: dGVzdA==
      oss_url: http://minio1:9000
      oss_secret_key: minio123
      oss_access_key: minio
      image_path_base: http://127.0.0.1:9000/matrix/
      redis_url: localhost
      port: 8888

  mailer:
    image: matrix-dev-docker.pkg.coding.net/matrix-server/3.0.0/matrix-mail
    networks:
      matrix:
        aliases:
        - mailer
    environment:
      MAIL_FROM: Matrix<matrix@cyprinus.net.cn>
      SMTP_SERVER: smtp.exmail.qq.com
      SMTP_PORT: 465
      MAIL_USER: matrix@cyprinus.net.cn
      MAIL_PASS: DjuP7K5CRt7L9BZd

  statistics:
    image: matrix-dev-docker.pkg.coding.net/matrix-server/3.0.0/matrix-statistics
    networks:
      matrix:
        aliases:
          - statistics
    environment:
      PORT: 3000
      HOST: statistics
      DB_URL: mongodb://mongo:27017/matrix-statustics

  websocket:
    image: matrix-dev-docker.pkg.coding.net/matrix-server/3.0.0/matrix-websocket
    networks:
      matrix:
        aliases:
        - websocket
    environment:
      RDS_HOST: redis
      RDS_PORT: 6379
      PORT: 8999


volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

networks:
  matrix:
